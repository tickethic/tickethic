name: Deploy to IPFS

permissions:
  contents: read
  pull-requests: write
  statuses: write

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: 'dapp/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./dapp

      - name: Build project
        run: npm run build
        working-directory: ./dapp
        env:
          NEXT_PUBLIC_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID }}
          NEXT_PUBLIC_CONTRACT_ARTIST: ${{ secrets.NEXT_PUBLIC_CONTRACT_ARTIST }}
          NEXT_PUBLIC_CONTRACT_ORGANIZATOR: ${{ secrets.NEXT_PUBLIC_CONTRACT_ORGANIZATOR }}
          NEXT_PUBLIC_CONTRACT_TICKET: ${{ secrets.NEXT_PUBLIC_CONTRACT_TICKET }}
          NEXT_PUBLIC_CONTRACT_EVENT: ${{ secrets.NEXT_PUBLIC_CONTRACT_EVENT }}
          NEXT_PUBLIC_CONTRACT_EVENT_MANAGER: ${{ secrets.NEXT_PUBLIC_CONTRACT_EVENT_MANAGER }}
          NEXT_PUBLIC_CONTRACT_NAME: ${{ secrets.NEXT_PUBLIC_CONTRACT_NAME }}

      - name: Deploy to IPFS
        uses: ipfs/ipfs-deploy-action@v1
        id: deploy
        with:
          path-to-deploy: dapp/out  # Next.js export output directory
          storacha-key: ${{ secrets.STORACHA_KEY }}
          storacha-proof: ${{ secrets.STORACHA_PROOF }}
          github-token: ${{ github.token }}

      - name: Comment PR with deployment info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const cid = '${{ steps.deploy.outputs.cid }}';
            const gatewayUrl = `https://${cid}.ipfs.dweb.link`;
            const swGatewayUrl = `https://${cid}.ipfs.inbrowser.link`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **D√©ploiement IPFS r√©ussi !**
              
              **CID:** \`${cid}\`
              
              **Liens d'acc√®s:**
              - üåê Gateway public: ${gatewayUrl}
              - üîó Service Worker Gateway: ${swGatewayUrl}
              
              Votre dApp est maintenant accessible sur IPFS !`
            });

      - name: Update commit status
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const cid = '${{ steps.deploy.outputs.cid }}';
            const gatewayUrl = `https://${cid}.ipfs.dweb.link`;
            
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              target_url: gatewayUrl,
              description: `D√©ploy√© sur IPFS (CID: ${cid})`,
              context: 'ipfs-deploy'
            });
